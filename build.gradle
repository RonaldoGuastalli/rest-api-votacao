buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.h2database:h2:1.4.197'
    }
}

plugins {
    id 'java'
    id "jacoco"
    id "org.sonarqube" version "2.8"
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "org.flywaydb.flyway" version "6.3.3"
}

sourceCompatibility = JavaVersion.VERSION_11

flyway {
    url = 'jdbc:mysql://localhost:3306/sessao-votacao'
    user = 'root'
    password = 'admin'
}


jacoco {
    toolVersion = "0.8.3"
}

test {
    useJUnitPlatform()
}

dependencies {
    testCompile group: 'com.h2database', name: 'h2', version: '1.3.148'
    testImplementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.1')

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testImplementation('org.junit.jupiter:junit-jupiter:5.6.1')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compile("com.h2database:h2:1.4.191")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    compile('org.junit.jupiter:junit-jupiter-engine:5.3.2')
    compile('org.mockito:mockito-junit-jupiter:2.23.4')
    compile('org.junit.platform:junit-platform-launcher:1.3.1')

//    compile("mysql:mysql-connector-java")
    compile("org.postgresql:postgresql:42.2.12")
    compile project(":contract")
}

allprojects {
    repositories {
        jcenter()
        mavenCentral()
    }
}

subprojects {
    group 'br.com.rjguastalli'
    version '1.0'

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'
    apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.1.7.RELEASE")
        }
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    dependencies {
        compile 'io.springfox:springfox-swagger2:2.9.2'
        compile 'io.springfox:springfox-swagger-ui:2.9.2'


        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        compile("mysql:mysql-connector-java")

        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'


        testCompileOnly 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
            exclude module: 'junit'
        }
        compile('ch.qos.logback:logback-classic:1.1.7') {
            exclude group: 'org.slf4j', module: 'slf4j-api' //by both name and group
        }
        testImplementation('org.junit.jupiter:junit-jupiter:5.6.1')
    }

//    sonarqube {
//        properties {
//            property "sonar.projectKey", "RonaldoGuastalli_sessao-votacao"
//        }
//    }

    task codeCoverageReport(type: JacocoReport) {
        executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

        subprojects.each {
            sourceSets it.sourceSets.main
        }

        reports {
            html.enabled true
            html.destination file("${buildDir}/reports/jacoco")
            csv.enabled false
            xml.enabled true
        }
    }

}




